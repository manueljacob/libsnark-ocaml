(library
 (name snark_caml_common)
 (libraries)
 (modes native)
 (public_name libsnark.libsnark_caml_common)
 (preprocess no_preprocessing)
 (c_library_flags
  :standard
  (:include ../flags.sexp))
 (foreign_archives snark_caml_common_stubs))

(rule
 (targets libsnark_caml_common_stubs.a)
 (deps
  (source_tree ../libsnark-caml)
  (env_var SNARKY_PERFORMANCE)
  ../setup_stubs.sh)
 (action
  (bash
   "\n pushd ..\n   ./setup_stubs.sh\n popd\n if [ $(uname) = 'Linux' ]; then\n   pushd ../libsnark-caml/build\n     make -j$(sysctl -n hw.logicalcpu) zm snark_caml_common\n\n     mkdir -p _stubs_build\n\n     mkdir -p _stubs_build/libzm\n     pushd _stubs_build/libzm/; ar -xv ../../depends/libzm.a; popd\n\n     mkdir -p _stubs_build/libsnark_caml_common\n     pushd _stubs_build/libsnark_caml_common/; ar -xv ../../caml/libsnark_caml_common.a; popd\n\n     ar -rc libsnark_caml_common_stubs.a \\\n       _stubs_build/libzm/*.o \\\n       _stubs_build/libsnark_caml_common/*.o\n   popd\n   mv ../libsnark-caml/build/libsnark_caml_common_stubs.a .\n elif [ $(uname) = 'Darwin' ]; then\n   pushd ../libsnark-caml/build\n     make -j$(sysctl -n hw.ncpu) zm snark_caml_common\n\n     mkdir -p _stubs_build\n\n     mkdir -p _stubs_build/libzm\n     pushd _stubs_build/libzm/; ar -xv ../../depends/libzm.a; popd\n\n     mkdir -p _stubs_build/libsnark_caml_common\n     pushd _stubs_build/libsnark_caml_common/; ar -xv ../../caml/libsnark_caml_common.a; popd\n\n     libtool -static -o libsnark_caml_common_stubs.a \\\n       _stubs_build/libzm/*.o \\\n       _stubs_build/libsnark_caml_common/*.o\n   popd\n   mv ../libsnark-caml/build/libsnark_caml_common_stubs.a .\n\n else\n     echo I do not know how to build libsnark on $(uname)\n     exit 1\n fi\n")))
